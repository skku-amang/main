generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum SessionName {
  VOCAL   // 보컬
  GUITAR  // 기타
  BASS    // 베이스
  SYNTH   // 신디
  DRUM    // 드럼
  STRINGS // 현악기
  WINDS   // 관악기
}


model User {
  id              Int       @id @default(autoincrement())
  email           String    @unique
  password        String
  name            String
  nickname        String    @unique
  bio             String?
  image           String?
  isAdmin         Boolean   @default(false) 
  hashedRefreshToken    String?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  generationId    Int
  generation      Generation @relation(fields: [generationId], references: [id], onDelete: Restrict)

  ledGeneration   Generation? @relation("generationLeader")

  sessions        Session[]
  ledSession      Session?  @relation("sessionLeader")

  @@map("users")
}

model Generation {
  id              Int       @id @default(autoincrement())
  order           Decimal   @db.Decimal(3, 1) @unique
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  leader          User?     @relation("generationLeader", fields: [leaderId], references: [id], onDelete: SetNull)
  leaderId        Int?      @unique

  users           User[]

  @@map("generations")
}

model Session {
  id              Int       @id @default(autoincrement())
  name            SessionName @unique
  icon            String?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  leader          User?     @relation("sessionLeader", fields: [leaderId], references: [id], onDelete: SetNull)
  leaderId        Int?      @unique

  users           User[]
  @@map("sessions")
}